# Generated by Django 2.2.5 on 2019-11-28 14:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.contrib.postgres.operations import TrigramExtension, UnaccentExtension

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        TrigramExtension(),
        UnaccentExtension(),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('logo', models.URLField(blank=True, null=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'brands',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CategoryOfProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'category_of_products',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'certificates',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Corporation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, unique=True, verbose_name='Corporation Name')),
                ('logo', models.URLField(blank=True, null=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'corporations',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(blank=True, max_length=8, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'db_table': 'countries',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Product Name')),
                ('logo', models.URLField(blank=True, null=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('scraped_image', models.URLField(blank=True, null=True, verbose_name='Scraped Image')),
                ('image_of_front', models.ImageField(blank=True, default='default.svg', null=True, upload_to='product_image', verbose_name='Image of Front')),
                ('image_of_details', models.ImageField(blank=True, default='default.svg', null=True, upload_to='product_image', verbose_name='Image of Details')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('scanned_counter', models.IntegerField(blank=True, default=1, null=True, verbose_name='Scanned Counter')),
                ('state', models.CharField(choices=[('200', 'checked'), ('209', 'pending'), ('306', 'incomplete'), ('211', 'unchecked')], max_length=10)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Brand')),
                ('certificate', models.ManyToManyField(blank=True, to='goodbuyDatabase.Certificate')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspector', to=settings.AUTH_USER_MODEL)),
                ('product_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.CategoryOfProduct', verbose_name='Product Category')),
            ],
            options={
                'db_table': 'products',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubCategoryOfProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('main_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.CategoryOfProduct')),
            ],
            options={
                'db_table': 'sub_category_of_products',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Country')),
            ],
            options={
                'db_table': 'stores',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(9999)])),
                ('land_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('land_rating_text', models.TextField(blank=True, null=True)),
                ('land_definition', models.URLField(blank=True, null=True)),
                ('women_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('women_rating_text', models.TextField(blank=True, null=True)),
                ('women_definition', models.URLField(blank=True, null=True)),
                ('farmers_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('farmers_rating_text', models.TextField(blank=True, null=True)),
                ('farmers_definition', models.URLField(blank=True, null=True)),
                ('workers_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('workers_rating_text', models.TextField(blank=True, null=True)),
                ('workers_definition', models.URLField(blank=True, null=True)),
                ('climate_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('climate_rating_text', models.TextField(blank=True, null=True)),
                ('climate_definition', models.URLField(blank=True, null=True)),
                ('transparency_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('transparency_rating_text', models.TextField(blank=True, null=True)),
                ('transparency_definition', models.URLField(blank=True, null=True)),
                ('water_value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('water_rating_text', models.TextField(blank=True, null=True)),
                ('water_definitio', models.URLField(blank=True, null=True)),
                ('corporation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Corporation')),
            ],
            options={
                'db_table': 'ratings',
                'ordering': ('corporation', 'id'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductPriceInStore',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goodbuyDatabase.Product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goodbuyDatabase.Store')),
            ],
            options={
                'db_table': 'product_price_in_store',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.SubCategoryOfProduct', verbose_name='Product Sub-Category'),
        ),
        migrations.AddField(
            model_name='corporation',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Country'),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('logo', models.URLField(blank=True, null=True)),
                ('wiki', models.URLField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('corporation', models.ForeignKey(blank=True, db_column='corporation', null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Corporation')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Country')),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
                'ordering': ('name', 'id'),
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Company'),
        ),
        migrations.AddField(
            model_name='brand',
            name='corporation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goodbuyDatabase.Corporation'),
        ),
    ]
